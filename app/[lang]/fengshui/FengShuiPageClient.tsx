"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import { Compass, Home, Calendar, Coins, Heart, Star } from "lucide-react"
import Link from "next/link"

export default function FengShuiPageClient() {
  const [activeTab, setActiveTab] = useState("overview")

  const fengShuiTools = [
    {
      id: "kua-number",
      title: "S·ªë Qu·∫ª C√° Nh√¢n",
      description: "T√≠nh to√°n s·ªë qu·∫ª v√† h∆∞·ªõng t·ªët cho b·∫°n",
      icon: Compass,
      href: "/fengshui/kua-number",
      color: "from-red-500 to-orange-500",
    },
    {
      id: "house-direction",
      title: "H∆∞·ªõng Nh√† T·ªët",
      description: "X√°c ƒë·ªãnh h∆∞·ªõng nh√† ph√π h·ª£p v·ªõi gia ch·ªß",
      icon: Home,
      href: "/fengshui/house-direction",
      color: "from-blue-500 to-cyan-500",
    },
    {
      id: "flying-stars",
      title: "C·ª≠u Tinh Phi Ph·ªß",
      description: "Ph√¢n t√≠ch nƒÉng l∆∞·ª£ng theo nƒÉm v√† th√°ng",
      icon: Star,
      href: "/fengshui/flying-stars",
      color: "from-purple-500 to-pink-500",
    },
    {
      id: "wealth-corner",
      title: "G√≥c T√†i L·ªôc",
      description: "T√¨m v·ªã tr√≠ ƒë·∫∑t v·∫≠t ph·∫©m thu h√∫t t√†i l·ªôc",
      icon: Coins,
      href: "/fengshui/wealth-corner",
      color: "from-yellow-500 to-amber-500",
    },
    {
      id: "love-corner",
      title: "G√≥c T√¨nh Y√™u",
      description: "K√≠ch ho·∫°t nƒÉng l∆∞·ª£ng t√¨nh y√™u v√† h√¥n nh√¢n",
      icon: Heart,
      href: "/fengshui/love-corner",
      color: "from-pink-500 to-rose-500",
    },
    {
      id: "calendar",
      title: "L·ªãch Phong Th·ªßy",
      description: "Ch·ªçn ng√†y t·ªët cho c√°c vi·ªác quan tr·ªçng",
      icon: Calendar,
      href: "/fengshui/calendar",
      color: "from-green-500 to-emerald-500",
    },
  ]

  const elements = [
    {
      name: "Kim",
      color: "text-gray-300",
      bgColor: "bg-gray-100",
      description: "Kim lo·∫°i, m√†u tr·∫Øng, b·∫°c",
      direction: "T√¢y, T√¢y B·∫Øc",
      icon: "‚ö™",
      characteristics: "C·ª©ng c√°p, s·∫Øc b√©n, tinh khi·∫øt",
      goodFor: "S·ª± nghi·ªáp, quy·ªÅn l·ª±c, danh ti·∫øng"
    },
    {
      name: "M·ªôc",
      color: "text-green-500",
      bgColor: "bg-green-100",
      description: "G·ªó, c√¢y c·ªëi, m√†u xanh l√°",
      direction: "ƒê√¥ng, ƒê√¥ng Nam",
      icon: "üå≥",
      characteristics: "Ph√°t tri·ªÉn, sinh tr∆∞·ªüng, linh ho·∫°t",
      goodFor: "S·ª©c kh·ªèe, gia ƒë√¨nh, h·ªçc t·∫≠p"
    },
    {
      name: "Th·ªßy",
      color: "text-blue-500",
      bgColor: "bg-blue-100",
      description: "N∆∞·ªõc, m√†u xanh d∆∞∆°ng, ƒëen",
      direction: "B·∫Øc",
      icon: "üíß",
      characteristics: "Ch·∫£y ƒë·ªông, th√≠ch ·ª©ng, tr√≠ tu·ªá",
      goodFor: "T√†i l·ªôc, tr√≠ tu·ªá, quan h·ªá"
    },
    {
      name: "H·ªèa",
      color: "text-red-500",
      bgColor: "bg-red-100",
      description: "L·ª≠a, m√†u ƒë·ªè, cam",
      direction: "Nam",
      icon: "üî•",
      characteristics: "NƒÉng ƒë·ªông, s√°ng t·∫°o, nhi·ªát huy·∫øt",
      goodFor: "Danh ti·∫øng, nh·∫≠n bi·∫øt, s·ª± n·ªïi ti·∫øng"
    },
    {
      name: "Th·ªï",
      color: "text-yellow-600",
      bgColor: "bg-yellow-100",
      description: "ƒê·∫•t, m√†u v√†ng, n√¢u",
      direction: "Trung t√¢m, T√¢y Nam, ƒê√¥ng B·∫Øc",
      icon: "üèîÔ∏è",
      characteristics: "·ªîn ƒë·ªãnh, nu√¥i d∆∞·ª°ng, b·ªÅn v·ªØng",
      goodFor: "H√¥n nh√¢n, b·∫£o qu·∫£n, gia ƒë√¨nh"
    },
  ]

  const tips = [
    {
      title: "C·ª≠a Ch√≠nh",
      content: "C·ª≠a ch√≠nh n√™n s·∫°ch s·∫Ω, tho√°ng ƒë√£ng v√† kh√¥ng b·ªã c·∫£n tr·ªü. Tr√°nh ƒë·∫∑t g∆∞∆°ng ƒë·ªëi di·ªán c·ª≠a ch√≠nh v√¨ s·∫Ω ƒë·∫©y kh√≠ t·ªët ra ngo√†i.",
      icon: "üö™",
      category: "L·ªëi V√†o"
    },
    {
      title: "Ph√≤ng Ng·ªß",
      content: "Gi∆∞·ªùng n√™n ƒë·∫∑t ·ªü v·ªã tr√≠ c√≥ th·ªÉ nh√¨n th·∫•y c·ª≠a nh∆∞ng kh√¥ng th·∫≥ng h√†ng v·ªõi c·ª≠a. Tr√°nh g∆∞∆°ng chi·∫øu v√†o gi∆∞·ªùng ƒë·ªÉ tr√°nh m·∫•t ng·ªß.",
      icon: "üõèÔ∏è",
      category: "Ngh·ªâ Ng∆°i"
    },
    {
      title: "B·∫øp",
      content: "B·∫øp kh√¥ng n√™n ƒë·ªëi di·ªán v·ªõi c·ª≠a ch√≠nh ho·∫∑c nh√† v·ªá sinh. Ng∆∞·ªùi n·∫•u ƒÉn n√™n quay l∆∞ng v·ªÅ ph√≠a t∆∞·ªùng ƒë·ªÉ c√≥ c·∫£m gi√°c an to√†n.",
      icon: "üç≥",
      category: "ƒÇn U·ªëng"
    },
    {
      title: "Ph√≤ng L√†m Vi·ªác",
      content: "B√†n l√†m vi·ªác n√™n ƒë·∫∑t ·ªü v·ªã tr√≠ 'quy·ªÅn l·ª±c' - l∆∞ng t·ª±a t∆∞·ªùng, m·∫∑t h∆∞·ªõng ra c·ª≠a ƒë·ªÉ ki·ªÉm so√°t ƒë∆∞·ª£c kh√¥ng gian.",
      icon: "üíº",
      category: "S·ª± Nghi·ªáp"
    },
    {
      title: "C√¢y Xanh",
      content: "C√¢y xanh mang l·∫°i sinh kh√≠ t·ªët v√† l·ªçc kh√¥ng kh√≠. Tr√°nh c√¢y c√≥ gai ho·∫∑c l√° nh·ªçn trong nh√† v√¨ t·∫°o s√°t kh√≠.",
      icon: "üå±",
      category: "Sinh Kh√≠"
    },
    {
      title: "√Ånh S√°ng",
      content: "√Ånh s√°ng t·ª± nhi√™n r·∫•t quan tr·ªçng cho s·ª©c kh·ªèe. S·ª≠ d·ª•ng ƒë√®n ƒë·ªÉ b·ªï sung √°nh s√°ng cho g√≥c t·ªëi v√† t·∫°o nƒÉng l∆∞·ª£ng t√≠ch c·ª±c.",
      icon: "üí°",
      category: "NƒÉng L∆∞·ª£ng"
    },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-900 via-teal-900 to-cyan-900">
      {/* Animated Background */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div className="absolute inset-0 bg-[url('/placeholder.svg')] opacity-5 bg-repeat bg-center"></div>
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-2 h-2 bg-emerald-400 rounded-full opacity-30"
            animate={{
              x: [0, 100, 0],
              y: [0, -100, 0],
              scale: [1, 1.5, 1],
            }}
            transition={{
              duration: 10 + i * 2,
              repeat: Number.POSITIVE_INFINITY,
              ease: "easeInOut",
            }}
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
          />
        ))}
      </div>

      <div className="relative z-10 pt-20 pb-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Header */}
          <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className="text-center mb-12">
            <h1 className="text-5xl font-bold bg-gradient-to-r from-emerald-400 to-cyan-400 bg-clip-text text-transparent mb-4">
              Phong Th·ªßy T·ªïng H·ª£p
            </h1>
            <p className="text-xl text-emerald-100 max-w-3xl mx-auto">
              Kh√°m ph√° ngh·ªá thu·∫≠t s·∫Øp x·∫øp kh√¥ng gian s·ªëng h√†i h√≤a v·ªõi thi√™n nhi√™n, mang l·∫°i may m·∫Øn, th·ªãnh v∆∞·ª£ng v√† h·∫°nh
              ph√∫c cho gia ƒë√¨nh b·∫°n
            </p>
            <div className="mt-6 flex flex-wrap justify-center gap-4 text-sm text-emerald-200">
              <span className="bg-emerald-800/50 px-3 py-1 rounded-full">‚ú® S·ªë Qu·∫ª C√° Nh√¢n</span>
              <span className="bg-emerald-800/50 px-3 py-1 rounded-full">üè† H∆∞·ªõng Nh√† T·ªët</span>
              <span className="bg-emerald-800/50 px-3 py-1 rounded-full">üí∞ G√≥c T√†i L·ªôc</span>
              <span className="bg-emerald-800/50 px-3 py-1 rounded-full">‚≠ê C·ª≠u Tinh Phi Ph·ªß</span>
            </div>
          </motion.div>

          {/* Navigation Tabs */}
          <div className="flex justify-center mb-8">
            <div className="bg-black/20 backdrop-blur-md rounded-full p-1">
              {[
                { id: "overview", label: "T·ªïng Quan" },
                { id: "tools", label: "C√¥ng C·ª•" },
                { id: "elements", label: "Ng≈© H√†nh" },
                { id: "tips", label: "M·∫πo Hay" },
              ].map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`px-6 py-2 rounded-full transition-all duration-300 ${
                    activeTab === tab.id ? "bg-emerald-500 text-white shadow-lg" : "text-emerald-200 hover:text-white"
                  }`}
                >
                  {tab.label}
                </button>
              ))}
            </div>
          </div>

          {/* Content Sections */}
          <motion.div
            key={activeTab}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3 }}
          >
            {activeTab === "overview" && (
              <div className="grid md:grid-cols-2 gap-8">
                <div className="bg-black/20 backdrop-blur-md rounded-2xl p-8 border border-emerald-500/20">
                  <h2 className="text-2xl font-bold text-emerald-400 mb-4">üåü Phong Th·ªßy L√† G√¨?</h2>
                  <p className="text-emerald-100 mb-4">
                    Phong Th·ªßy l√† m·ªôt h·ªá th·ªëng tri·∫øt h·ªçc c·ªï x∆∞a c·ªßa Trung Qu·ªëc, nghi√™n c·ª©u v·ªÅ c√°ch s·∫Øp x·∫øp kh√¥ng gian
                    s·ªëng ƒë·ªÉ t·∫°o ra s·ª± h√†i h√≤a gi·ªØa con ng∆∞·ªùi v√† m√¥i tr∆∞·ªùng xung quanh.
                  </p>
                  <p className="text-emerald-100 mb-4">
                    M·ª•c ti√™u c·ªßa Phong Th·ªßy l√† t·ªëi ∆∞u h√≥a d√≤ng ch·∫£y nƒÉng l∆∞·ª£ng t√≠ch c·ª±c (Kh√≠) trong kh√¥ng gian, t·ª´ ƒë√≥
                    mang l·∫°i s·ª©c kh·ªèe, th·ªãnh v∆∞·ª£ng v√† h·∫°nh ph√∫c cho ng∆∞·ªùi s·ªëng trong ƒë√≥.
                  </p>
                  <div className="bg-emerald-800/30 p-4 rounded-lg">
                    <p className="text-emerald-200 text-sm">
                      üí° <strong>L∆∞u √Ω:</strong> Phong th·ªßy kh√¥ng ch·ªâ l√† t√≠n ng∆∞·ª°ng m√† c√≤n l√† khoa h·ªçc v·ªÅ m√¥i tr∆∞·ªùng s·ªëng t·ªëi ∆∞u.
                    </p>
                  </div>
                </div>

                <div className="bg-black/20 backdrop-blur-md rounded-2xl p-8 border border-emerald-500/20">
                  <h2 className="text-2xl font-bold text-emerald-400 mb-4">‚öñÔ∏è Nguy√™n L√Ω C∆° B·∫£n</h2>
                  <ul className="space-y-3 text-emerald-100">
                    <li className="flex items-start space-x-2">
                      <span className="text-emerald-400">‚òØÔ∏è</span>
                      <span>
                        <strong>√Çm D∆∞∆°ng:</strong> C√¢n b·∫±ng gi·ªØa hai nƒÉng l∆∞·ª£ng ƒë·ªëi l·∫≠p nh∆∞ng b·ªï sung cho nhau
                      </span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <span className="text-emerald-400">üåü</span>
                      <span>
                        <strong>Ng≈© H√†nh:</strong> Kim, M·ªôc, Th·ªßy, H·ªèa, Th·ªï - 5 y·∫øu t·ªë c∆° b·∫£n
                      </span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <span className="text-emerald-400">üß≠</span>
                      <span>
                        <strong>B√°t Qu√°i:</strong> 8 h∆∞·ªõng v√† √Ω nghƒ©a phong th·ªßy c·ªßa ch√∫ng
                      </span>
                    </li>
                    <li className="flex items-start space-x-2">
                      <span className="text-emerald-400">üåä</span>
                      <span>
                        <strong>D√≤ng Kh√≠:</strong> Lu·ªìng nƒÉng l∆∞·ª£ng sinh kh√≠ trong kh√¥ng gian s·ªëng
                      </span>
                    </li>
                  </ul>
                </div>
              </div>
            )}

            {activeTab === "tools" && (
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                {fengShuiTools.map((tool, index) => (
                  <motion.div
                    key={tool.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                  >
                    <Link href={tool.href}>
                      <div className="bg-black/20 backdrop-blur-md rounded-2xl p-6 border border-emerald-500/20 hover:border-emerald-400/40 transition-all duration-300 hover:scale-105 cursor-pointer group">
                        <div
                          className={`w-12 h-12 rounded-full bg-gradient-to-r ${tool.color} flex items-center justify-center mb-4 group-hover:scale-110 transition-transform`}
                        >
                          <tool.icon className="w-6 h-6 text-white" />
                        </div>
                        <h3 className="text-xl font-bold text-emerald-400 mb-2">{tool.title}</h3>
                        <p className="text-emerald-100">{tool.description}</p>
                        <div className="mt-4 text-emerald-300 text-sm">
                          Nh·∫•p ƒë·ªÉ s·ª≠ d·ª•ng c√¥ng c·ª• ‚Üí
                        </div>
                      </div>
                    </Link>
                  </motion.div>
                ))}
              </div>
            )}

            {activeTab === "elements" && (
              <div className="space-y-8">
                <div className="text-center mb-8">
                  <h2 className="text-3xl font-bold text-emerald-400 mb-4">üåü Ng≈© H√†nh - NƒÉm Y·∫øu T·ªë C∆° B·∫£n</h2>
                  <p className="text-emerald-100 max-w-2xl mx-auto">
                    Ng≈© h√†nh l√† n·ªÅn t·∫£ng c·ªßa phong th·ªßy, ƒë·∫°i di·ªán cho 5 nƒÉng l∆∞·ª£ng c∆° b·∫£n t·∫°o n√™n v≈© tr·ª• v√† ·∫£nh h∆∞·ªüng ƒë·∫øn cu·ªôc s·ªëng con ng∆∞·ªùi.
                  </p>
                </div>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {elements.map((element, index) => (
                    <motion.div
                      key={element.name}
                      initial={{ opacity: 0, scale: 0.9 }}
                      animate={{ opacity: 1, scale: 1 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-black/20 backdrop-blur-md rounded-2xl p-6 border border-emerald-500/20 hover:border-emerald-400/40 transition-all duration-300"
                    >
                      <div className="text-center mb-4">
                        <div className="text-4xl mb-2">{element.icon}</div>
                        <h3 className={`text-2xl font-bold ${element.color}`}>{element.name}</h3>
                      </div>
                      <div className="space-y-3 text-emerald-100">
                        <p>
                          <strong className="text-emerald-300">ƒê·∫∑c ƒëi·ªÉm:</strong> {element.description}
                        </p>
                        <p>
                          <strong className="text-emerald-300">H∆∞·ªõng:</strong> {element.direction}
                        </p>
                        <p>
                          <strong className="text-emerald-300">T√≠nh ch·∫•t:</strong> {element.characteristics}
                        </p>
                        <p>
                          <strong className="text-emerald-300">T·ªët cho:</strong> {element.goodFor}
                        </p>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === "tips" && (
              <div className="space-y-8">
                <div className="text-center mb-8">
                  <h2 className="text-3xl font-bold text-emerald-400 mb-4">üí° M·∫πo Phong Th·ªßy Th·ª±c T·∫ø</h2>
                  <p className="text-emerald-100 max-w-2xl mx-auto">
                    Nh·ªØng l·ªùi khuy√™n phong th·ªßy h·ªØu √≠ch ƒë·ªÉ c·∫£i thi·ªán nƒÉng l∆∞·ª£ng trong t·ª´ng khu v·ª±c c·ªßa ng√¥i nh√†.
                  </p>
                </div>
                <div className="grid md:grid-cols-2 gap-6">
                  {tips.map((tip, index) => (
                    <motion.div
                      key={tip.title}
                      initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-black/20 backdrop-blur-md rounded-2xl p-6 border border-emerald-500/20 hover:border-emerald-400/40 transition-all duration-300"
                    >
                      <div className="flex items-start space-x-4">
                        <div className="text-3xl">{tip.icon}</div>
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <h3 className="text-xl font-bold text-emerald-400">{tip.title}</h3>
                            <span className="text-xs bg-emerald-800/50 text-emerald-200 px-2 py-1 rounded-full">
                              {tip.category}
                            </span>
                          </div>
                          <p className="text-emerald-100">{tip.content}</p>
                        </div>
                      </div>
                    </motion.div>
                  ))}
                </div>
              </div>
            )}
          </motion.div>

          {/* Call to Action */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5 }}
            className="text-center mt-12"
          >
            <div className="bg-black/20 backdrop-blur-md rounded-2xl p-8 border border-emerald-500/20">
              <h2 className="text-2xl font-bold text-emerald-400 mb-4">üöÄ B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh Phong Th·ªßy</h2>
              <p className="text-emerald-100 mb-6">
                Kh√°m ph√° c√°c c√¥ng c·ª• Phong Th·ªßy ƒë·ªÉ t·∫°o ra kh√¥ng gian s·ªëng h√†i h√≤a v√† th·ªãnh v∆∞·ª£ng. 
                B·∫Øt ƒë·∫ßu v·ªõi vi·ªác t√≠nh s·ªë qu·∫ª c√° nh√¢n c·ªßa b·∫°n!
              </p>
              <div className="flex flex-wrap justify-center gap-4">
                <Link
                  href="/fengshui/kua-number"
                  className="inline-flex items-center space-x-2 bg-gradient-to-r from-emerald-500 to-cyan-500 text-white px-8 py-3 rounded-full hover:from-emerald-600 hover:to-cyan-600 transition-all duration-300 transform hover:scale-105"
                >
                  <Compass className="w-5 h-5" />
                  <span>T√≠nh S·ªë Qu·∫ª</span>
                </Link>
                <Link
                  href="/fengshui/house-direction"
                  className="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-indigo-500 text-white px-8 py-3 rounded-full hover:from-blue-600 hover:to-indigo-600 transition-all duration-300 transform hover:scale-105"
                >
                  <Home className="w-5 h-5" />
                  <span>Ch·ªçn H∆∞·ªõng Nh√†</span>
                </Link>
              </div>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  )
}

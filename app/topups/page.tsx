import { getTopupPackages, getPaymentGates } from "@/lib/topups";
import TopupsClient from "./TopupsClient";
import type { Metadata } from "next";
import { getTranslations } from "@/i18n/server";
import { createSEOMetadata } from "@/lib/seo/metadata";
import { FatesUnit } from "@/components/common/FatesUnit";

export async function generateMetadata(): Promise<Metadata> {
  const t = await getTranslations("seo");

  return createSEOMetadata({
    title: "N·∫°p ƒêi·ªÉm Duy√™n - Mua G√≥i D·ªãch V·ª• Premium | B√≥c M·ªánh",
    description:
      "üí≥ N·∫°p ƒëi·ªÉm duy√™n ƒë·ªÉ tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß c√°c d·ªãch v·ª• b√≥i to√°n cao c·∫•p. Thanh to√°n an to√†n qua Momo, Banking, Visa. G√≥i ∆∞u ƒë√£i t·ª´ 50K v·ªõi nhi·ªÅu quy·ªÅn l·ª£i h·∫•p d·∫´n.",
    keywords:
      "n·∫°p ƒëi·ªÉm duy√™n, mua g√≥i premium, c·ªïng vietqr, thanh to√°n paypal, banking online, visa payment, d·ªãch v·ª• b√≥i to√°n, g√≥i ∆∞u ƒë√£i, b√≥c m·ªánh premium, n·∫°p ti·ªÅn online, payment vietnam",
    ogImage: "/imgs/topups-og.jpg",
    canonicalUrl: "/topups",
  });
}

interface TopupsPageProps {
  searchParams: {
    openNewWindow?: string;
  };
}

export default async function TopupsPage({ searchParams }: TopupsPageProps) {
  const topupPackages = await getTopupPackages();
  const paymentGates = await getPaymentGates();

  const { t } = await getTranslations("common");

  const openNewWindow = searchParams?.openNewWindow !== "0";

  // Structured data cho trang n·∫°p ƒëi·ªÉm duy√™n
  const topupsStructuredData = {
    "@context": "https://schema.org",
    "@graph": [
      {
        "@type": "Product",
        "@id": "https://bocmenh.com/topups#product",
        name: "ƒêi·ªÉm Duy√™n - D·ªãch V·ª• B√≥i To√°n Premium",
        description:
          "ƒêi·ªÉm duy√™n ƒë·ªÉ s·ª≠ d·ª•ng c√°c d·ªãch v·ª• b√≥i to√°n cao c·∫•p nh∆∞ xem t·ª≠ vi, b√≥i b√†i tarot, ph√¢n t√≠ch v·∫≠n m·ªánh chi ti·∫øt",
        brand: {
          "@type": "Brand",
          name: "B√≥c M·ªánh",
        },
        offers: topupPackages.map((pkg, index) => ({
          "@type": "Offer",
          "@id": `https://bocmenh.com/topups#offer-${index + 1}`,
          name: `G√≥i ${pkg.fates} ƒêi·ªÉm Duy√™n`,
          price: pkg.finalAmount.toString(),
          priceCurrency: "VND",
          availability: "https://schema.org/InStock",
          seller: {
            "@type": "Organization",
            name: "B√≥c M·ªánh",
          },
          validFrom: new Date().toISOString(),
          priceValidUntil: new Date(
            Date.now() + 365 * 24 * 60 * 60 * 1000
          ).toISOString(),
        })),
        category: "Digital Services",
        audience: {
          "@type": "Audience",
          audienceType: "Fortune Telling Enthusiasts",
        },
      },
      {
        "@type": "WebPage",
        "@id": "https://bocmenh.com/topups",
        name: "N·∫°p ƒêi·ªÉm Duy√™n - Mua G√≥i D·ªãch V·ª• Premium",
        description:
          "Trang n·∫°p ƒëi·ªÉm duy√™n ƒë·ªÉ tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß c√°c d·ªãch v·ª• b√≥i to√°n cao c·∫•p",
        url: "https://bocmenh.com/topups",
        inLanguage: "vi",
        isPartOf: {
          "@type": "WebSite",
          name: "B√≥c M·ªánh",
          url: "https://bocmenh.com",
        },
        breadcrumb: {
          "@type": "BreadcrumbList",
          itemListElement: [
            {
              "@type": "ListItem",
              position: 1,
              name: "Trang Ch·ªß",
              item: "https://bocmenh.com",
            },
            {
              "@type": "ListItem",
              position: 2,
              name: "N·∫°p ƒêi·ªÉm Duy√™n",
              item: "https://bocmenh.com/topups",
            },
          ],
        },
        mainEntity: {
          "@id": "https://bocmenh.com/topups#product",
        },
      },
      {
        "@type": "PaymentService",
        "@id": "https://bocmenh.com/topups#payment-service",
        name: "D·ªãch V·ª• Thanh To√°n B√≥c M·ªánh",
        description: "H·ªá th·ªëng thanh to√°n an to√†n cho vi·ªác n·∫°p ƒëi·ªÉm duy√™n",
        provider: {
          "@type": "Organization",
          name: "B√≥c M·ªánh",
          url: "https://bocmenh.com",
        },
        paymentAccepted: paymentGates.map((gate) => gate.name),
        currenciesAccepted: "VND",
        areaServed: "Vietnam",
        serviceType: "Digital Payment",
      },
      {
        "@type": "FAQPage",
        mainEntity: [
          {
            "@type": "Question",
            name: "ƒêi·ªÉm duy√™n l√† g√¨?",
            acceptedAnswer: {
              "@type": "Answer",
              text: "ƒêi·ªÉm duy√™n l√† ƒë∆°n v·ªã ti·ªÅn t·ªá ·∫£o trong h·ªá th·ªëng B√≥c M·ªánh, ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ tr·∫£i nghi·ªám c√°c d·ªãch v·ª• b√≥i to√°n cao c·∫•p nh∆∞ xem t·ª≠ vi chi ti·∫øt, b√≥i b√†i tarot, ph√¢n t√≠ch v·∫≠n m·ªánh.",
            },
          },
          {
            "@type": "Question",
            name: "C√≥ nh·ªØng ph∆∞∆°ng th·ª©c thanh to√°n n√†o?",
            acceptedAnswer: {
              "@type": "Answer",
              text: "Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua Momo, Banking online, th·∫ª Visa/Mastercard v√† c√°c v√≠ ƒëi·ªán t·ª≠ ph·ªï bi·∫øn t·∫°i Vi·ªát Nam.",
            },
          },
          {
            "@type": "Question",
            name: "G√≥i n·∫°p ƒëi·ªÉm n√†o ph√π h·ª£p nh·∫•t?",
            acceptedAnswer: {
              "@type": "Answer",
              text: "G√≥i c∆° b·∫£n 50K ph√π h·ª£p cho ng∆∞·ªùi m·ªõi tr·∫£i nghi·ªám. G√≥i 200K-500K c√≥ nhi·ªÅu ∆∞u ƒë√£i v√† bonus ƒëi·ªÉm. G√≥i VIP 1M+ d√†nh cho kh√°ch h√†ng th∆∞·ªùng xuy√™n v·ªõi quy·ªÅn l·ª£i ƒë·∫∑c bi·ªát.",
            },
          },
          {
            "@type": "Question",
            name: "ƒêi·ªÉm duy√™n c√≥ th·ªùi h·∫°n s·ª≠ d·ª•ng kh√¥ng?",
            acceptedAnswer: {
              "@type": "Answer",
              text: "ƒêi·ªÉm duy√™n kh√¥ng c√≥ th·ªùi h·∫°n s·ª≠ d·ª•ng. B·∫°n c√≥ th·ªÉ t√≠ch l≈©y v√† s·ª≠ d·ª•ng b·∫•t c·ª© l√∫c n√†o ƒë·ªÉ tr·∫£i nghi·ªám c√°c d·ªãch v·ª•.",
            },
          },
          {
            "@type": "Question",
            name: "C√≥ ch√≠nh s√°ch ho√†n ti·ªÅn kh√¥ng?",
            acceptedAnswer: {
              "@type": "Answer",
              text: "Ch√∫ng t√¥i c√≥ ch√≠nh s√°ch ho√†n ti·ªÅn trong v√≤ng 24h n·∫øu g·∫∑p l·ªói k·ªπ thu·∫≠t ho·∫∑c s·ª± c·ªë kh√¥ng mong mu·ªën. Vui l√≤ng li√™n h·ªá support ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.",
            },
          },
        ],
      },
      {
        "@type": "Organization",
        "@id": "https://bocmenh.com#organization",
        name: "B√≥c M·ªánh",
        url: "https://bocmenh.com",
        description: "N·ªÅn t·∫£ng b√≥i to√°n AI h√†ng ƒë·∫ßu Vi·ªát Nam",
        contactPoint: {
          "@type": "ContactPoint",
          contactType: "Customer Service",
          areaServed: "VN",
          availableLanguage: ["vi", "en"],
        },
        paymentAccepted: [
          "VietQR",
          "PayPal",
          "Credit Card",
          "Banking",
          "Digital Wallet",
        ],
        currenciesAccepted: "VND",
      },
    ],
  };

  return (
    <>
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{
          __html: JSON.stringify(topupsStructuredData),
        }}
      />
      <div className="min-h-screen bg-oriental-bg bg-cover bg-center py-12 px-4 sm:px-6 lg:px-8 flex flex-col items-center justify-center">
        <h1 className="text-4xl font-serif text-primary-foreground text-center mb-8 drop-shadow-lg">
          <span className="inline-flex items-center justify-center gap-2 w-full">
            {t("topups.pageTitle")}
            <FatesUnit
              type="icon"
              width={28}
              height={28}
              text={t("topups.fatesUnit")}
              className="flex-shrink-0 cursor-pointer"
              // isAura={false}
            />
          </span>
        </h1>
        <TopupsClient
          initialTopupPackages={topupPackages}
          openNewWindow={openNewWindow}
          paymentGates={paymentGates}
        />
      </div>
    </>
  );
}

"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import Link from "next/link"
import WealthCornerForm from "@/components/forms/WealthCornerForm"
import type { WealthAnalysis } from "@/lib/wealthCorner"

export default function WealthCornerPage() {
  const [showForm, setShowForm] = useState(false)
  const [analysis, setAnalysis] = useState<WealthAnalysis | null>(null)

  const wealthObjects = [
    { name: "C√¢y kim ti·ªÅn", icon: "üåø", description: "Thu h√∫t t√†i l·ªôc v√† th·ªãnh v∆∞·ª£ng" },
    { name: "R·ªìng v√†ng", icon: "üêâ", description: "Bi·ªÉu t∆∞·ª£ng quy·ªÅn l·ª±c v√† gi√†u c√≥" },
    { name: "Thuy·ªÅn bu·ªìm", icon: "‚õµ", description: "Mang l·∫°i c∆° h·ªôi kinh doanh" },
    { name: "Pi Yao", icon: "ü¶Å", description: "B·∫£o v·ªá v√† thu h√∫t t√†i ch√≠nh" },
    { name: "Th√°c n∆∞·ªõc", icon: "üíß", description: "D√≤ng ch·∫£y t√†i ch√≠nh li√™n t·ª•c" },
    { name: "Pha l√™ t√≠m", icon: "üíé", description: "TƒÉng c∆∞·ªùng nƒÉng l∆∞·ª£ng t√†i l·ªôc" },
  ]

  const benefits = [
    "Thu h√∫t t√†i l·ªôc v√† c∆° h·ªôi kinh doanh",
    "TƒÉng c∆∞·ªùng d√≤ng ch·∫£y t√†i ch√≠nh",
    "C·∫£i thi·ªán v·∫≠n may trong ƒë·∫ßu t∆∞",
    "B·∫£o v·ªá t√†i s·∫£n kh·ªèi th·∫•t tho√°t",
    "Mang l·∫°i s·ª± th·ªãnh v∆∞·ª£ng l√¢u d√†i",
    "T·∫°o nƒÉng l∆∞·ª£ng t√≠ch c·ª±c cho c√¥ng vi·ªác",
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-yellow-50 via-amber-50 to-orange-50">
      {/* Animated Background */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        {[...Array(20)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute text-yellow-400 opacity-20"
            initial={{
              x: Math.random() * window.innerWidth,
              y: Math.random() * window.innerHeight,
            }}
            animate={{
              x: Math.random() * window.innerWidth,
              y: Math.random() * window.innerHeight,
            }}
            transition={{
              duration: Math.random() * 10 + 10,
              repeat: Number.POSITIVE_INFINITY,
              repeatType: "reverse",
            }}
          >
            üí∞
          </motion.div>
        ))}
      </div>

      <div className="relative z-10">
        {/* Header */}
        <div className="bg-white/80 backdrop-blur-sm border-b border-yellow-200">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-4">
                <Link href="/fengshui" className="text-yellow-600 hover:text-yellow-700 transition-colors">
                  ‚Üê Quay l·∫°i Phong Th·ªßy
                </Link>
                <div className="h-6 w-px bg-yellow-300"></div>
                <h1 className="text-2xl font-bold text-gray-800">G√≥c T√†i L·ªôc</h1>
              </div>
            </div>
          </div>
        </div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          {!showForm ? (
            <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className="space-y-8">
              {/* Hero Section */}
              <div className="text-center">
                <motion.div
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ delay: 0.2 }}
                  className="text-6xl mb-4"
                >
                  üí∞
                </motion.div>
                <h1 className="text-4xl font-bold text-gray-800 mb-4">Ph√¢n T√≠ch G√≥c T√†i L·ªôc</h1>
                <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                  Kh√°m ph√° v√† k√≠ch ho·∫°t g√≥c t√†i l·ªôc trong kh√¥ng gian s·ªëng c·ªßa b·∫°n ƒë·ªÉ thu h√∫t th·ªãnh v∆∞·ª£ng v√† c∆° h·ªôi kinh
                  doanh theo nguy√™n l√Ω phong th·ªßy truy·ªÅn th·ªëng.
                </p>
              </div>

              {/* What is Wealth Corner */}
              <div className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl border border-yellow-200">
                <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">G√≥c T√†i L·ªôc l√† g√¨?</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div>
                    <h3 className="text-lg font-semibold text-gray-800 mb-3">üß≠ ƒê·ªãnh nghƒ©a</h3>
                    <p className="text-gray-600 mb-4">
                      G√≥c t√†i l·ªôc l√† khu v·ª±c trong kh√¥ng gian s·ªëng ƒë∆∞·ª£c x√°c ƒë·ªãnh d·ª±a tr√™n h∆∞·ªõng nh√†, s·ªë Kua c√° nh√¢n v√†
                      v·ªã tr√≠ sao bay, c√≥ kh·∫£ nƒÉng thu h√∫t v√† t√≠ch t·ª• nƒÉng l∆∞·ª£ng t√†i ch√≠nh t√≠ch c·ª±c.
                    </p>
                    <h3 className="text-lg font-semibold text-gray-800 mb-3">‚≠ê Nguy√™n l√Ω</h3>
                    <p className="text-gray-600">
                      Theo phong th·ªßy, m·ªói ng∆∞·ªùi c√≥ h∆∞·ªõng t√†i l·ªôc ri√™ng d·ª±a tr√™n nƒÉm sinh v√† gi·ªõi t√≠nh. K·∫øt h·ª£p v·ªõi g√≥c
                      ƒê√¥ng Nam truy·ªÅn th·ªëng v√† sao bay h√†ng nƒÉm ƒë·ªÉ t·∫°o ra ph√¢n t√≠ch to√†n di·ªán.
                    </p>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold text-gray-800 mb-3">üéØ L·ª£i √≠ch</h3>
                    <div className="space-y-2">
                      {benefits.map((benefit, index) => (
                        <div key={index} className="flex items-center">
                          <span className="text-yellow-500 mr-2">‚úì</span>
                          <span className="text-gray-600">{benefit}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              {/* Wealth Objects */}
              <div className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl border border-yellow-200">
                <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">V·∫≠t Ph·∫©m Phong Th·ªßy T√†i L·ªôc</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {wealthObjects.map((object, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-gradient-to-br from-yellow-50 to-amber-50 p-6 rounded-xl border border-yellow-200 text-center hover:shadow-lg transition-shadow"
                    >
                      <div className="text-4xl mb-3">{object.icon}</div>
                      <h3 className="font-semibold text-gray-800 mb-2">{object.name}</h3>
                      <p className="text-sm text-gray-600">{object.description}</p>
                    </motion.div>
                  ))}
                </div>
              </div>

              {/* How it Works */}
              <div className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl border border-yellow-200">
                <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">C√°ch Th·ª©c Ho·∫°t ƒê·ªông</h2>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">
                      1
                    </div>
                    <h3 className="font-semibold text-gray-800 mb-2">Nh·∫≠p th√¥ng tin</h3>
                    <p className="text-gray-600">Cung c·∫•p nƒÉm sinh, gi·ªõi t√≠nh, h∆∞·ªõng nh√† v√† lo·∫°i ph√≤ng c·∫ßn ph√¢n t√≠ch</p>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">
                      2
                    </div>
                    <h3 className="font-semibold text-gray-800 mb-2">Ph√¢n t√≠ch to√†n di·ªán</h3>
                    <p className="text-gray-600">H·ªá th·ªëng t√≠nh to√°n d·ª±a tr√™n s·ªë Kua, g√≥c truy·ªÅn th·ªëng v√† sao bay</p>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4">
                      3
                    </div>
                    <h3 className="font-semibold text-gray-800 mb-2">Nh·∫≠n k·∫øt qu·∫£</h3>
                    <p className="text-gray-600">Nh·∫≠n ƒë∆∞·ª£c ph√¢n t√≠ch chi ti·∫øt v√† h∆∞·ªõng d·∫´n k√≠ch ho·∫°t g√≥c t√†i l·ªôc</p>
                  </div>
                </div>
              </div>

              {/* CTA Button */}
              <div className="text-center">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  onClick={() => setShowForm(true)}
                  className="bg-gradient-to-r from-yellow-500 to-amber-600 text-white px-8 py-4 rounded-xl font-semibold text-lg hover:from-yellow-600 hover:to-amber-700 transition-colors shadow-lg"
                >
                  B·∫Øt ƒê·∫ßu Ph√¢n T√≠ch G√≥c T√†i L·ªôc
                </motion.button>
              </div>
            </motion.div>
          ) : (
            <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="bg-white/80 backdrop-blur-sm p-8 rounded-2xl border border-yellow-200">
                <div className="flex items-center justify-between mb-6">
                  <h2 className="text-2xl font-bold text-gray-800">Ph√¢n T√≠ch G√≥c T√†i L·ªôc</h2>
                  <button
                    onClick={() => setShowForm(false)}
                    className="text-gray-500 hover:text-gray-700 transition-colors"
                  >
                    ‚Üê Quay l·∫°i t·ªïng quan
                  </button>
                </div>
                <WealthCornerForm onAnalysisComplete={setAnalysis} />
              </div>
            </motion.div>
          )}
        </div>
      </div>
    </div>
  )
}
